#include<stdio.h>

int cost[20][20],visit[20],n;

void kruskal(int);

int main()
{
	int x,i,j;
	printf("\nEnter the number of vertices : ");
	scanf("%d",&n);
	printf("\nEnter cost matrix : ");
	for(i=1;i<=n;i++)
	{
		printf("\nEnter %d TH row : ",i);
		for(j=1;j<=n;j++)
			scanf("%d",&cost[i][j]);
	}
	for(i=1;i<=n;i++)
		visit[i]=1;
	printf("\nEnter the starting vertex : ");
	scanf("%d",&x);
	if(x<1 || x>n)
		printf("\nTraversal not possible");
	else
	{
		printf("\nMinimal spanning tree ");
		kruskal(x);
	}
	return 0;
}

void kruskal(int v)
{
	int i,j,s,x,y,min,sum=0;
	visit[v]=0;
	for(s=1;s<n;s++)
	{
		min=99;
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=n;j++)
			{
				if(visit[j]==1 && cost[i][j]!=0 && min>cost[i][j])
				{
					x=i;
					y=j;
					min=cost[i][j];
				}
			}
		}
		sum=sum+min;
		printf("\n(%d,%d)------>%d",x,y,min);
	}
	printf("Minimum cost of the tree is : %d",sum);	
}
