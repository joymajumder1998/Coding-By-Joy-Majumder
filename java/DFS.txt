import java.util.Scanner;

class DFS
{
	static int arr[][],n;
	static boolean visit[];
	static Scanner input=new Scanner(System.in);
	static void getGraph()
	{
		System.out.println("Enter the number of vertices : ");
		n=input.nextInt();
		arr=new int[n][n];
		visit=new boolean[n];
		for(int i=0;i<n;i++)
		{
			System.out.println("Enter "+(i+1)+" TH row : ");
			for(int j=0;j<n;j++)
				arr[i][j]=input.nextInt();
		}
		for(int i=0;i<n;i++)
			visit[i]=true;
	}

	static void display()
	{
		System.out.println("The adjacency matrix is : ");
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
				System.out.printf("%4d",arr[i][j]);
			System.out.print("\n");
		}
	}
	
	static void DFS(int x)
	{
		visit[x]=false;
		for(int i=0;i<n;i++)
		{
			if(arr[x][i]==1)
			{
				if(visit[i]==true)
				{
					System.out.println("("+(x+1)+","+(i+1)+")");
					DFS(i);
				}
			}
		}
	}

	public static void main(String args[])
	{
		getGraph();
		display();
		abc: System.out.println("Enter the starting vertex : ");
		int x=input.nextInt();
		if(x<1 && x>n)
		{
			System.out.println("Wrong starting vertex");
			return;
		}
		DFS(x-1);
		return;
	}
}
